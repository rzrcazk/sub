import re

# 定义一个函数来转换规则集到Clash Meta的rule-providers
def convert_rules_to_meta(rules_content):
    # 分割每行来处理
    rules_lines = rules_content.strip().split("\n")
    converted_rules = []

    # 正则表达式匹配规则行
    rule_pattern = re.compile(r'^ruleset=(.+?),(.+?):(.+)$')

    for line in rules_lines:
        if line.startswith(';') or not line:  # 跳过注释和空行
            continue

        match = rule_pattern.match(line)
        if not match:
            continue

        # 提取规则集名称、类型和URL
        group_name, rule_type, url = match.groups()
        rule_name = group_name.strip().split(' ')[-1]  # 使用空格后的部分作为规则名称

        # 构建Clash Meta规则提供者格式
        rule_provider = {
            'type': 'http',
            'behavior': 'classical' if 'clash-classic' in rule_type else 'domain',
            'path': f"./ruleset/{rule_name}.yaml",
            'url': url,
            'interval': 86400,
        }
        converted_rules.append({rule_name: rule_provider})

    return converted_rules

# 你提供的规则集字符串内容
rules_content = """
;设置规则标志位
ruleset=👨‍💻 GitHub,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.yaml
ruleset=🎯 国内流量,https://github.juanshen.eu.org/https://raw.githubusercontent.com/cutethotw/ClashRule/main/Rule/Inside.list
ruleset=🚀 国外流量,https://github.juanshen.eu.org/https://raw.githubusercontent.com/cutethotw/ClashRule/main/Rule/Outside.list
ruleset=🧚 ChatGPT,https://github.juanshen.eu.org/https://raw.githubusercontent.com/cutethotw/ClashRule/main/Rule/ChatGPT.list
ruleset=🧚 ChatGPT,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml
ruleset=🎯 国内流量,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml
ruleset=🎯 国内流量,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list
ruleset=🚀 国外流量,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PikPak/PikPak.yaml
ruleset=🛸 IP归属地伪装,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/lwd-temp/anti-ip-attribution/main/generated/rule-provider.yaml
;ruleset=🛑 广告拦截,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list
;ruleset=🛑 广告拦截,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list
;ruleset=🛑 广告拦截,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyList.list
;ruleset=🛑 广告拦截,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyListChina.list
;ruleset=🛑 广告拦截,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyPrivacy.list
ruleset=🛑 广告拦截,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ZhihuAds/ZhihuAds.yaml
ruleset=📹 YouTube,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml
ruleset=🎥 Netflix,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml
ruleset=🐹 DisneyPlus,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.yaml
ruleset=📽️ PrimeVideo,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AmazonPrimeVideo/AmazonPrimeVideo.yaml
ruleset=🎦 HBOGO,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBOHK/HBOHK.yaml
ruleset=🎦 HBOGO,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBOAsia/HBOAsia.yaml
ruleset=🎦 HBOMAX,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBOUSA/HBOUSA.yaml
ruleset=🍎 AppleTV,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AppleTV/AppleTV.yaml
ruleset=🎬 EMBY,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/cutethotw/ClashRule/main/Rule/Emby.yaml
ruleset=🎬 EMBY,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Emby/Emby.yaml
ruleset=📺 巴哈姆特,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bahamut/Bahamut.yaml
ruleset=📺 Bilibili,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list
ruleset=📺 Bilibili,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bilibili.list
ruleset=🎵 Spotify,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.yaml
ruleset=🎶 TikTok,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.yaml
ruleset=🌍 国外媒体,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml
ruleset=🌏 国内媒体,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMedia/ChinaMedia.yaml
ruleset=📢 谷歌FCM,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleFCM.list
ruleset=🎯 国内流量,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list
ruleset=Ⓜ️ 微软云盘,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OneDrive/OneDrive.yaml
ruleset=Ⓜ️ 微软服务,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml
ruleset=🍎 苹果服务,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple.yaml
ruleset=📲 Telegram,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml
ruleset=🤖 Discord,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Discord/Discord.yaml
ruleset=🎮 游戏平台,clash-classic:https://github.juanshen.eu.org/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.yaml
ruleset=🚀 国外流量,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list
ruleset=🎯 国内流量,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list
ruleset=🎯 国内流量,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list
ruleset=🎯 国内流量,https://github.juanshen.eu.org/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Download.list
ruleset=🎯 国内流量,[]GEOIP,CN
ruleset=🐟 漏网之鱼,[]FINAL
...
;设置规则标志位
"""

# 调用函数并打印结果
converted_rules = convert_rules_to_meta(rules_content)
print(converted_rules)

# 将结果写入到YAML文件
import yaml
converted_yaml = yaml.safe_dump({"rule-providers": converted_rules}, sort_keys=False)

# 将转换后的YAML内容写入文件
output_path = './converted_clash_meta.yaml'
with open(output_path, 'w') as file:
    file.write(converted_yaml)

print(f"Converted Clash Meta configuration has been saved to {output_path}")
